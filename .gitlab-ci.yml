variables:
  DOCKER_BUILDKIT: 1

image: docker:20.10.16

services:
  - name: docker:20.10.16-dind
    command: ["--experimental"]

stages:
  - build
  - release
  - deploy

build:
  stage: build
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - |
      if [[ -n "$CI_COMMIT_TAG" ]]; then
        BUILD_TAGS="-t $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG -t $CI_REGISTRY_IMAGE:latest"
      else
        BUILD_TAGS="-t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
      fi
  script:
    - docker build $BUILD_TAGS .
    - docker push $CI_REGISTRY_IMAGE --all-tags
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" && $CI_COMMIT_TAG == null'
      when: never
    - when: always

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  script:
    - echo "Creating release"
  release:
    name: "$CI_COMMIT_TAG"
    description: "$CI_COMMIT_MESSAGE"
    tag_name: "$CI_COMMIT_TAG"
    ref: "$CI_COMMIT_TAG"
  rules:
    - if: $CI_COMMIT_TAG
      when: always

deploy:
  stage: deploy
  image: curlimages/curl:latest
  variables:
    TAG: $CI_COMMIT_TAG
  before_script:
    - source $production_env
  script:
    - curl -X POST "$PORTAINER_WEBHOOK_URL?TAG=$TAG"
  rules:
    - if: $CI_COMMIT_TAG
      when: always
